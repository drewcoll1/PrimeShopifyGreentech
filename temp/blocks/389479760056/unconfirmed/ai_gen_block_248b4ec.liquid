{% doc %}
  @prompt
    I would like for a compelling hero section where there is a box for words on the left that overlaps a larger box with pictures that revolve, I need the images to fit in the boxes, also please make it so there is not circles on the bottom, i would like for the images to cover the majority of the section

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-hero-section-{{ ai_gen_id }} {
    position: relative;
    min-height: {{ block.settings.section_height }}px;
    display: flex;
    align-items: center;
    padding: 40px 20px;
    background-color: {{ block.settings.background_color }};
    overflow: hidden;
  }

  .ai-hero-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 0.8fr 2fr;
    gap: 0;
    align-items: center;
    height: 100%;
  }

  .ai-hero-text-box-{{ ai_gen_id }} {
    position: relative;
    z-index: 3;
    background-color: {{ block.settings.text_box_background }};
    padding: {{ block.settings.text_box_padding }}px;
    border-radius: {{ block.settings.text_box_border_radius }}px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    transform: translateX({{ block.settings.text_box_overlap }}px);
    max-width: 500px;
  }

  .ai-hero-heading-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    line-height: 1.2;
    margin: 0 0 16px 0;
    font-weight: 700;
  }

  .ai-hero-subtext-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.text_size }}px;
    line-height: 1.5;
    margin: 0 0 24px 0;
  }

  .ai-hero-button-{{ ai_gen_id }} {
    display: inline-block;
    padding: 16px 32px;
    background-color: {{ block.settings.button_background }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .ai-hero-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background }};
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }

  .ai-hero-image-container-{{ ai_gen_id }} {
    position: relative;
    height: {{ block.settings.image_container_height }}px;
    background-color: {{ block.settings.image_box_background }};
    border-radius: {{ block.settings.image_box_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
    width: 100%;
  }

  .ai-hero-image-wrapper-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .ai-hero-image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity {{ block.settings.transition_duration }}s ease-in-out;
  }

  .ai-hero-image-{{ ai_gen_id }}.active {
    opacity: 1;
  }

  .ai-hero-image-placeholder-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-hero-image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  @media screen and (max-width: 768px) {
    .ai-hero-container-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 20px;
    }

    .ai-hero-text-box-{{ ai_gen_id }} {
      transform: translateX(0);
      order: 2;
      max-width: 100%;
    }

    .ai-hero-image-container-{{ ai_gen_id }} {
      order: 1;
      height: 300px;
    }

    .ai-hero-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-hero-subtext-{{ ai_gen_id }} {
      font-size: {{ block.settings.text_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<hero-carousel-{{ ai_gen_id }}
  class="ai-hero-section-{{ ai_gen_id }}"
  data-transition-duration="{{ block.settings.transition_duration }}"
  data-autoplay-duration="{{ block.settings.autoplay_duration }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-hero-container-{{ ai_gen_id }}">
    <div class="ai-hero-text-box-{{ ai_gen_id }}">
      {% if block.settings.heading != blank %}
        <h1 class="ai-hero-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h1>
      {% endif %}
      
      {% if block.settings.subtext != blank %}
        <div class="ai-hero-subtext-{{ ai_gen_id }}">{{ block.settings.subtext }}</div>
      {% endif %}
      
      {% if block.settings.button_text != blank and block.settings.button_link != blank %}
        <a href="{{ block.settings.button_link }}" class="ai-hero-button-{{ ai_gen_id }}">
          {{ block.settings.button_text }}
        </a>
      {% endif %}
    </div>

    <div class="ai-hero-image-container-{{ ai_gen_id }}">
      <div class="ai-hero-image-wrapper-{{ ai_gen_id }}">
        {% assign has_images = false %}
        
        {% if block.settings.image_1 %}
          {% assign has_images = true %}
          <img
            src="{{ block.settings.image_1 | image_url: width: 1200 }}"
            alt="{{ block.settings.image_1.alt | escape }}"
            class="ai-hero-image-{{ ai_gen_id }} active"
            loading="lazy"
            width="1200"
            height="800"
          >
        {% endif %}

        {% if block.settings.image_2 %}
          {% assign has_images = true %}
          <img
            src="{{ block.settings.image_2 | image_url: width: 1200 }}"
            alt="{{ block.settings.image_2.alt | escape }}"
            class="ai-hero-image-{{ ai_gen_id }}"
            loading="lazy"
            width="1200"
            height="800"
          >
        {% endif %}

        {% if block.settings.image_3 %}
          {% assign has_images = true %}
          <img
            src="{{ block.settings.image_3 | image_url: width: 1200 }}"
            alt="{{ block.settings.image_3.alt | escape }}"
            class="ai-hero-image-{{ ai_gen_id }}"
            loading="lazy"
            width="1200"
            height="800"
          >
        {% endif %}

        {% if block.settings.image_4 %}
          {% assign has_images = true %}
          <img
            src="{{ block.settings.image_4 | image_url: width: 1200 }}"
            alt="{{ block.settings.image_4.alt | escape }}"
            class="ai-hero-image-{{ ai_gen_id }}"
            loading="lazy"
            width="1200"
            height="800"
          >
        {% endif %}

        {% unless has_images %}
          <div class="ai-hero-image-placeholder-{{ ai_gen_id }}">
            {{ 'hero-apparel-1' | placeholder_svg_tag }}
          </div>
        {% endunless %}
      </div>
    </div>
  </div>
</hero-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class HeroCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.autoplayTimer = null;
      }

      connectedCallback() {
        this.images = this.querySelectorAll('.ai-hero-image-{{ ai_gen_id }}');
        this.transitionDuration = parseFloat(this.dataset.transitionDuration) * 1000;
        this.autoplayDuration = parseFloat(this.dataset.autoplayDuration) * 1000;

        if (this.images.length > 1) {
          this.startAutoplay();
          this.setupEventListeners();
        }
      }

      disconnectedCallback() {
        this.stopAutoplay();
      }

      setupEventListeners() {
        this.addEventListener('mouseenter', () => this.stopAutoplay());
        this.addEventListener('mouseleave', () => this.startAutoplay());
      }

      goToSlide(index) {
        if (index === this.currentIndex || index >= this.images.length) return;

        this.images[this.currentIndex].classList.remove('active');
        this.currentIndex = index;
        this.images[this.currentIndex].classList.add('active');
      }

      nextSlide() {
        const nextIndex = (this.currentIndex + 1) % this.images.length;
        this.goToSlide(nextIndex);
      }

      startAutoplay() {
        if (this.images.length <= 1) return;
        
        this.stopAutoplay();
        this.autoplayTimer = setInterval(() => {
          this.nextSlide();
        }, this.autoplayDuration);
      }

      stopAutoplay() {
        if (this.autoplayTimer) {
          clearInterval(this.autoplayTimer);
          this.autoplayTimer = null;
        }
      }
    }

    customElements.define('hero-carousel-{{ ai_gen_id }}', HeroCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Hero with Rotating Images",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Discover Amazing Products"
    },
    {
      "type": "textarea",
      "id": "subtext",
      "label": "Subtext",
      "default": "Experience the perfect blend of style and functionality with our curated collection."
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4"
    },
    {
      "type": "header",
      "content": "Animation Settings"
    },
    {
      "type": "range",
      "id": "transition_duration",
      "min": 0.5,
      "max": 2,
      "step": 0.1,
      "unit": "s",
      "label": "Transition duration",
      "default": 0.8
    },
    {
      "type": "range",
      "id": "autoplay_duration",
      "min": 2,
      "max": 8,
      "step": 0.5,
      "unit": "s",
      "label": "Autoplay duration",
      "default": 4
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "section_height",
      "min": 500,
      "max": 900,
      "step": 20,
      "unit": "px",
      "label": "Section height",
      "default": 700
    },
    {
      "type": "range",
      "id": "image_container_height",
      "min": 400,
      "max": 800,
      "step": 20,
      "unit": "px",
      "label": "Image container height",
      "default": 600
    },
    {
      "type": "range",
      "id": "text_box_overlap",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Text box overlap",
      "default": 40
    },
    {
      "type": "range",
      "id": "text_box_padding",
      "min": 20,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Text box padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Section background",
      "default": "#f9f8f6"
    },
    {
      "type": "color",
      "id": "text_box_background",
      "label": "Text box background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "image_box_background",
      "label": "Image box background",
      "default": "#f4f4f4"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Button hover background",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 24,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 48
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 18
    },
    {
      "type": "header",
      "content": "Border Radius"
    },
    {
      "type": "range",
      "id": "text_box_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Text box border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "image_box_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Image box border radius",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Hero with Rotating Images"
    }
  ]
}
{% endschema %}