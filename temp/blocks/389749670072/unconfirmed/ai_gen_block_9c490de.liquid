{% doc %}
  @prompt
    make a hero section that the entire area is a video and then words can be put on top of it, can you make it so the youtube video is playing, ok great can you make the video be the entire height of the page i do not want any black space above or below it, I dont want any black space below or above the video, please make the video span the entire width of the page, give me options to move the video left and right, the video and container is slightly off center on the page let me be able to manipulate it all, this is good please remove the black space below the video and above, can there be an option to hear the sound in the video

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-video-hero-{{ ai_gen_id }} {
    position: relative;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    padding: 0;
    left: {{ block.settings.container_horizontal_offset }}px;
    top: {{ block.settings.container_vertical_offset }}px;}

  .ai-video-hero__background-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    overflow: hidden;
  }

  .ai-video-hero__background-{{ ai_gen_id }} iframe {
    position: absolute;
    top: 50%;
    left: 50%;
    width: calc(100vw + {{ block.settings.video_width_extra }}px);
    height: calc(100vh + {{ block.settings.video_height_extra }}px);
    min-width: calc(177.78vh + {{ block.settings.video_width_extra }}px);
    min-height: calc(56.25vw + {{ block.settings.video_height_extra }}px);
    transform: translate(calc(-50% + {{ block.settings.video_horizontal_position }}px), calc(-50% + {{ block.settings.video_vertical_position }}px)) scale({{ block.settings.video_scale | divided_by: 100.0 }});
    border: none;
    pointer-events: none;
    object-fit: cover;}

  .ai-video-hero__overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: {{ block.settings.overlay_color }};
    opacity: {{ block.settings.overlay_opacity | divided_by: 100.0 }};
    z-index: 2;
  }

  .ai-video-hero__content-{{ ai_gen_id }} {
    position: relative;
    z-index: 3;
    text-align: {{ block.settings.text_alignment }};
    color: {{ block.settings.text_color }};
    max-width: {{ block.settings.content_width }}px;
    padding: 20px;
    transform: translate({{ block.settings.content_horizontal_offset }}px, {{ block.settings.content_vertical_offset }}px);}

  .ai-video-hero__heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    font-weight: {{ block.settings.heading_weight }};
    margin: 0 0 {{ block.settings.heading_spacing }}px 0;
    line-height: 1.2;}

  .ai-video-hero__subheading-{{ ai_gen_id }} {
    font-size: {{ block.settings.subheading_size }}px;
    margin: 0 0 {{ block.settings.subheading_spacing }}px 0;
    line-height: 1.4;
  }

  .ai-video-hero__button-{{ ai_gen_id }} {
    display: inline-block;
    padding: {{ block.settings.button_padding_vertical }}px {{ block.settings.button_padding_horizontal }}px;
    background-color: {{ block.settings.button_background }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: {{ block.settings.button_font_size }}px;
    font-weight: {{ block.settings.button_font_weight }};
    transition: all 0.3s ease;
    border: {{ block.settings.button_border_width }}px solid {{ block.settings.button_border_color }};}

  .ai-video-hero__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background }};
    color: {{ block.settings.button_hover_text_color }};
    border-color: {{ block.settings.button_hover_border_color }};
  }

  .ai-video-hero__sound-toggle-{{ ai_gen_id }} {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 4;
    background-color: {{ block.settings.sound_button_background }};
    color: {{ block.settings.sound_button_color }};
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }

  .ai-video-hero__sound-toggle-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.sound_button_hover_background }};
    transform: scale(1.1);
  }

  .ai-video-hero__sound-toggle-{{ ai_gen_id }} svg {
    width: 24px;
    height: 24px;
  }

  @media screen and (max-width: 768px) {
    .ai-video-hero-{{ ai_gen_id }} {
      left: {{ block.settings.container_horizontal_offset | times: 0.5 }}px;
      top: {{ block.settings.container_vertical_offset | times: 0.5 }}px;
    }

    .ai-video-hero__content-{{ ai_gen_id }} {
      max-width: 90%;
      padding: 15px;
      transform: translate({{ block.settings.content_horizontal_offset | times: 0.5 }}px, {{ block.settings.content_vertical_offset | times: 0.5 }}px);
    }

    .ai-video-hero__heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.7 }}px;
    }

    .ai-video-hero__subheading-{{ ai_gen_id }} {
      font-size: {{ block.settings.subheading_size | times: 0.8 }}px;
    }

    .ai-video-hero__button-{{ ai_gen_id }} {
      font-size: {{ block.settings.button_font_size | times: 0.9 }}px;
      padding: {{ block.settings.button_padding_vertical | times: 0.8 }}px {{ block.settings.button_padding_horizontal | times: 0.8 }}px;
    }

    .ai-video-hero__sound-toggle-{{ ai_gen_id }} {
      width: 40px;
      height: 40px;
      top: 15px;
      right: 15px;
    }

    .ai-video-hero__sound-toggle-{{ ai_gen_id }} svg {
      width: 20px;
      height: 20px;
    }
  }
{% endstyle %}

<video-hero-{{ ai_gen_id }} class="ai-video-hero-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.youtube_video_id != blank %}
    <div class="ai-video-hero__background-{{ ai_gen_id }}">
      <iframe
        id="ai-video-iframe-{{ ai_gen_id }}"
        src="https://www.youtube.com/embed/{{ block.settings.youtube_video_id }}?autoplay=1&mute={% if block.settings.enable_sound %}0{% else %}1{% endif %}&loop=1&playlist={{ block.settings.youtube_video_id }}&controls=0&showinfo=0&rel=0&iv_load_policy=3&modestbranding=1&disablekb=1&fs=0&enablejsapi=1"
        title="Background Video"
        allow="autoplay; encrypted-media"
        allowfullscreen
      ></iframe>
    </div>
  {% endif %}

  <div class="ai-video-hero__overlay-{{ ai_gen_id }}"></div>

  {% if block.settings.show_sound_toggle %}
    <button 
      class="ai-video-hero__sound-toggle-{{ ai_gen_id }}"
      id="ai-sound-toggle-{{ ai_gen_id }}"
      aria-label="Toggle video sound"
      data-muted="{% if block.settings.enable_sound %}false{% else %}true{% endif %}"
    >
      <svg class="ai-sound-on-{{ ai_gen_id }}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="display: {% if block.settings.enable_sound %}block{% else %}none{% endif %};">
        <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>
        <path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>
      </svg>
      <svg class="ai-sound-off-{{ ai_gen_id }}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="display: {% if block.settings.enable_sound %}none{% else %}block{% endif %};">
        <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>
        <line x1="23" y1="9" x2="17" y2="15"></line>
        <line x1="17" y1="9" x2="23" y2="15"></line>
      </svg>
    </button>
  {% endif %}

  <div class="ai-video-hero__content-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h1 class="ai-video-hero__heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h1>
    {% endif %}

    {% if block.settings.subheading != blank %}
      <div class="ai-video-hero__subheading-{{ ai_gen_id }}">{{ block.settings.subheading }}</div>
    {% endif %}

    {% if block.settings.button_text != blank and block.settings.button_link != blank %}
      <a href="{{ block.settings.button_link }}" class="ai-video-hero__button-{{ ai_gen_id }}">
        {{ block.settings.button_text }}
      </a>
    {% endif %}
  </div>
</video-hero-{{ ai_gen_id }}>

<script>
  (function() {
    class VideoHero{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.iframe = null;
        this.soundToggle = null;
        this.isMuted = {{ block.settings.enable_sound | json }} === false;
      }

      connectedCallback() {
        this.iframe = this.querySelector('#ai-video-iframe-{{ ai_gen_id }}');
        this.soundToggle = this.querySelector('#ai-sound-toggle-{{ ai_gen_id }}');
        
        if (this.soundToggle) {
          this.soundToggle.addEventListener('click', this.toggleSound.bind(this));
        }

        if (this.iframe) {
          this.iframe.addEventListener('load', () => {
            this.updateSoundState();
          });
        }
      }

      toggleSound() {
        this.isMuted = !this.isMuted;
        this.updateSoundState();
        this.updateIframeSrc();
      }

      updateSoundState() {
        if (!this.soundToggle) return;

        const soundOnIcon = this.soundToggle.querySelector('.ai-sound-on-{{ ai_gen_id }}');
        const soundOffIcon = this.soundToggle.querySelector('.ai-sound-off-{{ ai_gen_id }}');
        
        if (this.isMuted) {
          soundOnIcon.style.display = 'none';
          soundOffIcon.style.display = 'block';this.soundToggle.setAttribute('data-muted', 'true');
          this.soundToggle.setAttribute('aria-label', 'Unmute video');
        } else {
          soundOnIcon.style.display = 'block';
          soundOffIcon.style.display = 'none';
          this.soundToggle.setAttribute('data-muted', 'false');
          this.soundToggle.setAttribute('aria-label', 'Mute video');
        }
      }

      updateIframeSrc() {
        if (!this.iframe) return;

        const videoId = '{{ block.settings.youtube_video_id }}';
        const muteParam = this.isMuted ? '1' : '0';
        const newSrc = `https://www.youtube.com/embed/${videoId}?autoplay=1&mute=${muteParam}&loop=1&playlist=${videoId}&controls=0&showinfo=0&rel=0&iv_load_policy=3&modestbranding=1&disablekb=1&fs=0&enablejsapi=1`;
        
        this.iframe.src = newSrc;
      }
    }

    customElements.define('video-hero-{{ ai_gen_id }}', VideoHero{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Video Hero Section",
  "settings": [
    {
      "type": "header",
      "content": "Video Settings"
    },
    {
      "type": "text",
      "id": "youtube_video_id",
      "label": "YouTube Video ID",
      "info": "Enter the YouTube video ID (e.g., 'dQw4w9WgXcQ' from https://www.youtube.com/watch?v=dQw4w9WgXcQ)"
    },
    {
      "type": "checkbox",
      "id": "enable_sound",
      "label": "Enable video sound",
      "default": false,
      "info": "Allow video to play with sound. Note: Most browsers require user interaction before playing audio."
    },
    {
      "type": "checkbox",
      "id": "show_sound_toggle",
      "label": "Show sound toggle button",
      "default": true,
      "info": "Display a button to let users toggle video sound on/off"
    },
    {
      "type": "header",
      "content": "Sound Button Style"
    },
    {
      "type": "color",
      "id": "sound_button_background",
      "label": "Sound button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "sound_button_color",
      "label": "Sound button icon color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "sound_button_hover_background",
      "label": "Sound button hover background",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Container Position"
    },
    {
      "type": "range",
      "id": "container_horizontal_offset",
      "min": -100,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Container horizontal offset",
      "default": 0,
      "info": "Move entire container left (negative) or right (positive)"
    },
    {
      "type": "range",
      "id": "container_vertical_offset",
      "min": -100,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Container vertical offset",
      "default": 0,
      "info": "Move entire container up (negative) or down (positive)"
    },
    {
      "type": "header",
      "content": "Video Position & Size"
    },
    {
      "type": "range",
      "id": "video_horizontal_position",
      "min": -200,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Video horizontal position",
      "default": 0,
      "info": "Move video left (negative) or right (positive)"
    },
    {
      "type": "range",
      "id": "video_vertical_position",
      "min": -200,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Video vertical position",
      "default": 0,
      "info": "Move video up (negative) or down (positive)"
    },
    {
      "type": "range",
      "id": "video_width_extra",
      "min": 0,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "Extra video width",
      "default": 100,
      "info": "Add extra width to eliminate black bars"
    },
    {
      "type": "range",
      "id": "video_height_extra",
      "min": 0,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "Extra video height",
      "default": 100,
      "info": "Add extra height to eliminate black bars"
    },
    {
      "type": "range",
      "id": "video_scale",
      "min": 100,
      "max": 200,
      "step": 5,
      "unit": "%",
      "label": "Video scale",
      "default": 110,
      "info": "Scale video size to fill screen completely"
    },
    {
      "type": "header",
      "content": "Overlay Settings"
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Overlay color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Overlay opacity",
      "default": 30
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Your Amazing Video Hero"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Subheading",
      "default": "Create stunning hero sections with video backgrounds"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Content Position"
    },
    {
      "type": "range",
      "id": "content_horizontal_offset",
      "min": -200,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Content horizontal offset",
      "default": 0,
      "info": "Move content left (negative) or right (positive)"
    },
    {
      "type": "range",
      "id": "content_vertical_offset",
      "min": -200,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Content vertical offset",
      "default": 0,
      "info": "Move content up (negative) or down (positive)"
    },
    {
      "type": "header",
      "content": "Content Styling"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 300,
      "max": 1000,
      "step": 50,
      "unit": "px",
      "label": "Content max width",
      "default": 600
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 48
    },
    {
      "type": "select",
      "id": "heading_weight",
      "label": "Heading weight",
      "options": [
        {
          "value": "300",
          "label": "Light"
        },
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "700"
    },
    {
      "type": "range",
      "id": "heading_spacing",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Heading bottom spacing",
      "default": 20
    },
    {
      "type": "header",
      "content": "Subheading"
    },
    {
      "type": "range",
      "id": "subheading_size",
      "min": 12,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Subheading size",
      "default": 18
    },
    {
      "type": "range",
      "id": "subheading_spacing",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Subheading bottom spacing",
      "default": 30
    },
    {
      "type": "header",
      "content": "Button Styling"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Button hover background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Button hover text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button border color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_border_color",
      "label": "Button hover border color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "button_border_width",
      "min": 0,
      "max": 5,
      "step": 1,
      "unit": "px",
      "label": "Button border width",
      "default": 0
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "button_font_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Button font size",
      "default": 16
    },
    {
      "type": "select",
      "id": "button_font_weight",
      "label": "Button font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "range",
      "id": "button_padding_vertical",
      "min": 8,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button vertical padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_padding_horizontal",
      "min": 16,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Button horizontal padding",
      "default": 32
    }
  ],
  "presets": [
    {
      "name": "Video Hero Section"
    }
  ]
}
{% endschema %}